import paho.mqtt.client as mqtt   #import the MQTT library
import time                       # import the time
import datetime                   #import the dateTime
from pymongo import MongoClient   #import mongodb library
 
global recevetopic 
def on_connect(client, userdata, flag, rc):  #make a function to connect with server
    if rc == 0:                              #if rc = 0 then it will connect the server
        print("mqtt connected")              #print the mqtt connected on terminal
    else:
        print("mqtt not connected, %d\n", rc) #print on terminal MQTT not conncted to server alsp print the rc
  
#publishing the msg from server to device       
def on_message(client, userdata, msg):  # The callback for when a PUBLISH message is received from the server.
    
    #database 
    receiveTime=datetime.datetime.now()
    message=msg.payload.decode("utf-8")
    val = message
    
    print(str(receiveTime) + ": " + str(val))
    
    
    #aerem100
    print("Message received-> ", str(msg.payload.decode("utf-8"))) #print the payload message or recieved msg
    print("Topic recieved: ", str(msg.topic))

    mqtt_topic = msg.topic
    topic_identifier = mqtt_topic[27: ]
    topic_split = mqtt_topic.split('/')
    device_mac = topic_split[1]
    print(device_mac)
    # post={"time":receiveTime,"topic":msg.topic,"value":val,"mac_id":z}
           
    if(topic_identifier == "M2S"):
        recevetopic= "aerem100/" +device_mac+ "/M2S"
        if(msg.topic == recevetopic):
            sendtopic = "aeremS2D/"+device_mac+"/S2D"
            client.publish(sendtopic, str(msg.payload.decode("utf-8")))
            print("in loop1")

    if(topic_identifier == "D2S/ACK"):
        recevetopic= "aerem100/" +device_mac+ "/D2S/ACK"
        if(msg.topic == recevetopic):
            sendtopic = "aeremS2M/"+device_mac+"/S2M/ACK"
            client.publish(sendtopic, str(msg.payload.decode("utf-8")))
            print("in loop2")
            device=db.AEREM100_device.find({"device_identification_no": device_mac})
            payload_split = msg.payload.split('/')
            payload_ack = payload_split[0]
            
            
    if(topic_identifier == "D2S/STATUS"):
        recevetopic= "aerem100/" +device_mac+ "/D2S/STATUS"
        if(msg.topic == recevetopic):
            sendtopic = "aeremS2M/"+device_mac+"/S2M/STATUS"
            client.publish(sendtopic, str(msg.payload.decode("utf-8")))
            print("in loop3")
            
    if(topic_identifier == "D2S/UVTIME"):
        recevetopic= "aerem100/" +device_mac+ "/D2S/UVTIME"
        if(msg.topic == recevetopic):
            sendtopic = "aeremS2M/"+device_mac+"/S2M/UVTIME"
            client.publish(sendtopic, str(msg.payload.decode("utf-8")))
            
            print("in loop4")
    #database
    post={"time":receiveTime,"topic":msg.topic,"value":val,"mac_id":device_mac}
    collection.insert_one(post)
        
# Set up client for MongoDB
mongoClient=MongoClient()                   #attach the mongodb client
db=mongoClient.systems                   #databases name
collection=db.AEREM100_payload           #collection name       
             
#aerem100 
broker = "18.188.97.170"                    #set the ip address of server
client = mqtt.Client("espClient")           #call the clients as espClient
client.on_connect = on_connect              #call the on_Connect function
print("connecting to broker", broker)       #print on terminal connecting to server
client.connect(broker)                      #connect the server
client.subscribe("aerem100/#")
client.on_message = on_message              #call the on_message function
client.loop_forever()                       #run the code conntinously
